<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>blog on 這裡是巫宗霖的個人網站</title>
    <link>https://jason11254.github.io/blog/</link>
    <description>Recent content in blog on 這裡是巫宗霖的個人網站</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-tw</language>
    <lastBuildDate>Tue, 29 Oct 2019 13:49:23 +0600</lastBuildDate><atom:link href="https://jason11254.github.io/blog/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>RESTful設計風格</title>
      <link>https://jason11254.github.io/blog/restful/</link>
      <pubDate>Wed, 16 Feb 2022 17:47:52 +0800</pubDate>
      
      <guid>https://jason11254.github.io/blog/restful/</guid>
      <description>REST (Representational State Transfer) ful API，是一種設計風格。
規則如下：
  使用 http method 表示後端動作。</description>
    </item>
    
    <item>
      <title>Spring學習筆記01-IoC簡介</title>
      <link>https://jason11254.github.io/blog/springioc/</link>
      <pubDate>Tue, 15 Feb 2022 10:07:47 +0800</pubDate>
      
      <guid>https://jason11254.github.io/blog/springioc/</guid>
      <description>IoC (Inversion of Control) - 控制反轉，將object的控制權交給Spring容器管理。
由Spring容器管理的object則稱為bean。
Spring IoC簡易流程   在目標class上加上@Component：</description>
    </item>
    
    <item>
      <title>Spring學習筆記02-AOP簡介</title>
      <link>https://jason11254.github.io/blog/springaop/</link>
      <pubDate>Tue, 15 Feb 2022 10:07:47 +0800</pubDate>
      
      <guid>https://jason11254.github.io/blog/springaop/</guid>
      <description>AOP (Aspect Oriented Programming) 切面導向程式設計，意思是將很多方法使用的共同邏輯寫在切面裡，由切面統一處理這段程式。
這裡假設沒有使用切面，每次執行方法時都必須在方法程式開始時輸出【開始】與方法程式結束時【結束】，那麼程式碼會長這樣：
public class ExampleClass{public void fun01(){System.</description>
    </item>
    
    <item>
      <title>Spring學習筆記03-前後端請求與回應</title>
      <link>https://jason11254.github.io/blog/spring%E8%AB%8B%E6%B1%82%E8%88%87%E5%9B%9E%E6%87%89/</link>
      <pubDate>Tue, 15 Feb 2022 10:07:47 +0800</pubDate>
      
      <guid>https://jason11254.github.io/blog/spring%E8%AB%8B%E6%B1%82%E8%88%87%E5%9B%9E%E6%87%89/</guid>
      <description>Spring 前後端請求與回應 簡單筆記。
Http 協議：規定前後端程式之間的資料傳輸格式。
格式如下：
   Http Request (請求) Http Response(回應)     http method (get,post,put&amp;hellip;等) http status code (200,404 &amp;hellip; 等)   url (網址) response header   request header response body   request body     HTTP 狀態碼 (http status code) http 狀態碼依照首位數字不同分為五大類。</description>
    </item>
    
  </channel>
</rss>
