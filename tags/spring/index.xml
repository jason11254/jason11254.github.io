<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Spring on 這裡是巫宗霖的個人網站</title>
    <link>https://jason11254.github.io/tags/spring/</link>
    <description>Recent content in Spring on 這裡是巫宗霖的個人網站</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-tw</language>
    <lastBuildDate>Tue, 15 Feb 2022 10:07:47 +0800</lastBuildDate><atom:link href="https://jason11254.github.io/tags/spring/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Spring學習筆記01-IoC簡介</title>
      <link>https://jason11254.github.io/blog/springioc/</link>
      <pubDate>Tue, 15 Feb 2022 10:07:47 +0800</pubDate>
      
      <guid>https://jason11254.github.io/blog/springioc/</guid>
      <description>IoC (Inversion of Control) - 控制反轉，將object的控制權交給Spring容器管理。
由Spring容器管理的object則稱為bean。
Spring IoC簡易流程   在目標class上加上@Component：</description>
    </item>
    
    <item>
      <title>Spring學習筆記02-AOP簡介</title>
      <link>https://jason11254.github.io/blog/springaop/</link>
      <pubDate>Tue, 15 Feb 2022 10:07:47 +0800</pubDate>
      
      <guid>https://jason11254.github.io/blog/springaop/</guid>
      <description>AOP (Aspect Oriented Programming) 切面導向程式設計，意思是將很多方法使用的共同邏輯寫在切面裡，由切面統一處理這段程式。
這裡假設沒有使用切面，每次執行方法時都必須在方法程式開始時輸出【開始】與方法程式結束時【結束】，那麼程式碼會長這樣：
public class ExampleClass{public void fun01(){System.</description>
    </item>
    
  </channel>
</rss>
